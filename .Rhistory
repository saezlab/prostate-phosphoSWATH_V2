sep="_", remove=FALSE)
sample_annotation <- sample_annotation %>%
mutate_if(is.character, as.factor) %>%
as.data.frame()
rownames(sample_annotation) <- sample_annotation$term
sample_annotation <- sample_annotation %>% select(-term)
## Specify colors
ann_colors = list(
cell_line = c(abl = "#E69F00", LNCaP = "#56B4E9"),
inhibitor = c(noInhib = "#56B4E9", iPI3K = "#E69F00", iMEK = "#009E73"),
time = c(t0 = "#56B4E9", t1 = "#E69F00", t2 = "#009E73"),
ligand = c(noLigand = "#56B4E9", EGF = "#E69F00", DHT = "#009E73")
)
covariate_vars <- c("Intercept","ms_day180409", "ms_day180410", "ms_day180412",
"ms_day180414", "Culture_batch", "fraction_missing")
View(LinearModelData_df)
MatrixStatistic <-
LinearModelData_df %>%
dplyr::select(statistic,GeneSymbol_Residue, term) %>%
dplyr::filter(!(term %in% covariate_vars)) %>%
dplyr::group_by(GeneSymbol_Residue, term) %>%
dplyr::filter(statistic == max(abs(statistic))) %>%
dplyr::ungroup()
head(MatrixStatistic)
MatrixStatistic$statistic
sort(MatrixStatistic)
sort(MatrixStatistic$statistic)
sort(MatrixStatistic$statistic, desc = TRUE)
head(sort(MatrixStatistic$statistic, decreasing =  TRUE))
tail(sort(MatrixStatistic$statistic, decreasing =  TRUE))
## From linear model to Matrix suitable to run Viper.
MatrixStatistic <-
LinearModelData_df %>%
dplyr::select(statistic,GeneSymbol_Residue, term, p.value) %>%
dplyr::filter(!(term %in% covariate_vars)) %>%
dplyr::group_by(GeneSymbol_Residue, term) %>%
dplyr::filter(p.value == min(p.value)) %>%
dplyr::ungroup() %>%
dplyr::select(-p.value)  %>%
tidyr::pivot_wider(names_from = term, values_from = statistic)  %>%
tibble::column_to_rownames(var = "GeneSymbol_Residue") %>%
as.matrix()
MatrixStatistic <-
LinearModelData_df %>%
dplyr::select(statistic,GeneSymbol_Residue, term, p.value) %>%
dplyr::filter(!(term %in% covariate_vars))
head(MatrixStatistic <-
LinearModelData_df %>%
dplyr::select(statistic,GeneSymbol_Residue, term, p.value) %>%
dplyr::filter(!(term %in% covariate_vars)) )
head(MatrixStatistic)
MatrixStatistic <-
LinearModelData_df %>%
dplyr::select(statistic,GeneSymbol_Residue, term, p.value) %>%
dplyr::filter(!(term %in% covariate_vars)) %>%
dplyr::group_by(GeneSymbol_Residue, term) %>%
dplyr::filter(p.value == min(p.value)) %>%
dplyr::ungroup() %>%
dplyr::select(-p.value)
head(MatrixStatistic <-
LinearModelData_df %>%
dplyr::select(statistic,GeneSymbol_Residue, term, p.value) %>%
dplyr::filter(!(term %in% covariate_vars)) %>%
dplyr::group_by(GeneSymbol_Residue, term) %>%
dplyr::filter(p.value == min(p.value)) %>%
dplyr::ungroup() %>%
dplyr::select(-p.value))
MatrixStatistic <-
LinearModelData_df %>%
dplyr::select(statistic,GeneSymbol_Residue, term, p.value) %>%
dplyr::filter(!(term %in% covariate_vars)) %>%
dplyr::group_by(GeneSymbol_Residue, term) %>%
dplyr::filter(p.value == min(p.value)) %>%
dplyr::ungroup() %>%
dplyr::select(-p.value)  %>%
tidyr::pivot_wider(names_from = term, values_from = statistic)
MatrixStatistic
MatrixStatistic <-
LinearModelData_df %>%
dplyr::select(statistic,GeneSymbol_Residue, term, p.value) %>%
dplyr::filter(!(term %in% covariate_vars))
MatrixStatistic
LinearModelData_df$term
table(LinearModelData_df$term)
dim(    LinearModelData_df %>%
dplyr::select(statistic,GeneSymbol_Residue, term, p.value) %>%
dplyr::filter(!(term %in% covariate_vars)) )
dim(LinearModelData_df %>%
dplyr::select(statistic,GeneSymbol_Residue, term, p.value) %>%
dplyr::filter(!(term %in% covariate_vars)) %>%
dplyr::group_by(GeneSymbol_Residue, term) %>%
dplyr::filter(p.value == min(p.value)))
dim(LinearModelData_df %>%
dplyr::select(statistic,GeneSymbol_Residue, term, p.value) %>%
dplyr::filter(!(term %in% covariate_vars)) %>%
dplyr::group_by(GeneSymbol_Residue, term) %>%
dplyr::filter(p.value == min(p.value)) %>%
dplyr::ungroup() )
dim(LinearModelData_df %>%
dplyr::select(statistic,GeneSymbol_Residue, term, p.value) %>%
dplyr::filter(!(term %in% covariate_vars)) %>%
dplyr::group_by(GeneSymbol_Residue, term) %>%
dplyr::filter(p.value == min(p.value)) %>%
dplyr::ungroup() %>%
dplyr::distinct())
## From linear model to Matrix suitable to run Viper.
MatrixStatistic <-
LinearModelData_df %>%
dplyr::select(statistic,GeneSymbol_Residue, term, p.value) %>%
dplyr::filter(!(term %in% covariate_vars)) %>%
dplyr::group_by(GeneSymbol_Residue, term) %>%
dplyr::filter(p.value == min(p.value)) %>%
dplyr::ungroup() %>%
dplyr::distinct() %>%
dplyr::select(-p.value)  %>%
tidyr::pivot_wider(names_from = term, values_from = statistic)  %>%
tibble::column_to_rownames(var = "GeneSymbol_Residue") %>%
as.matrix()
MatrixStatistic
View(MatrixStatistic)
ResultsLinearModel <- read_tsv("Data/limma_model_results_20190301.tsv")
LinearModelData_df <- ResultsLinearModel %>%
dplyr::filter(!is.na(residues_str)) %>%
dplyr::mutate(residues_str = strsplit(residues_str, "_")) %>%
tidyr::unnest(residues_str) %>%
dplyr::mutate(GeneSymbol_Residue = paste(GeneSymbol, residues_str, sep="_"))
dim(LinearModelData_df %>%
dplyr::filter(term == "LNCaP_noInhib_t2_EGF") %>%
dplyr::filter(p.value < 0.05)  %>%
dplyr::select(GeneSymbol_Residue, statistic, p.value) )
dim( LinearModelData_df %>%
dplyr::filter(term == "LNCaP_noInhib_t2_EGF") %>%
dplyr::filter(p.value < 0.05)  %>%
dplyr::select(GeneSymbol_Residue, statistic, p.value)  %>%
dplyr::group_by(GeneSymbol_Residue) %>%
dplyr::filter(p.value == min(p.value)) )
dim(LinearModelData_df %>%
dplyr::filter(term == "LNCaP_noInhib_t2_EGF") %>%
dplyr::filter(p.value < 0.05)  %>%
dplyr::select(GeneSymbol_Residue, statistic, p.value)  %>%
dplyr::group_by(GeneSymbol_Residue) %>%
dplyr::filter(p.value == min(p.value))  %>%
dplyr::ungroup() )
dim(
LinearModelData_LNCaP_noInhib_t2_EGF <- LinearModelData_df %>%
dplyr::filter(term == "LNCaP_noInhib_t2_EGF") %>%
dplyr::filter(p.value < 0.05)  %>%
dplyr::select(GeneSymbol_Residue, statistic, p.value)  %>%
dplyr::group_by(GeneSymbol_Residue) %>%
dplyr::filter(p.value == min(p.value))  %>%
dplyr::ungroup() %>%
dplyr::select(-p.value) %>%
dplyr::distinct())
rm(list=ls());cat('\014');if(length(dev.list()>0)){dev.off()}
knitr::opts_chunk$set(echo = TRUE)
ResultsLinearModel <- read_tsv("Data/limma_model_results_20190301.tsv")
ResultsLinearModel <- read_tsv("Data/limma_model_results_20190301.tsv")
knitr::opts_chunk$set(echo = TRUE)
library(readr)
library(dplyr)
library(OmnipathR)
library(VennDiagram)
library(viper)
library(tidyr)
library(pheatmap)
library(gprofiler2)
library(bc3net)
range <- function(x){ (x - min(x))/(max(x)-min(x)) * (1 - (-1)) + -1 }
OmnipathInteractions <- import_Omnipath_Interactions() %>%
dplyr::filter(consensus_stimulation != 0 | consensus_inhibition != 0)  %>%
dplyr::mutate(sign = if_else(consensus_stimulation==1,1,-1)) %>%
dplyr::select(source_genesymbol, sign,  target_genesymbol) %>%
dplyr::rename(source ="source_genesymbol", target ="target_genesymbol")
PDTs_df <-
read_tsv("Data/41587_2019_391_MOESM5_ESM.csv",col_names = FALSE,  skip = 1) %>%
dplyr::rename(kinases = "X1", substrates = "X2", kinaseFamily = "X3", sign = "X4") %>%
dplyr::mutate(substrates = gsub("\\(", "_", substrates)) %>%
dplyr::mutate(substrates = gsub("\\)", "",substrates)) %>%
dplyr::select(-kinaseFamily) %>%
dplyr::distinct()
KSN_PDTs <- as.data.frame(PDTs_df) %>%
dplyr::rename(source="kinases", target="substrates") %>%
dplyr::select(source, sign, target)
CarnivalNetwork <- dplyr::bind_rows(OmnipathInteractions, KSN_PDTs) %>%
dplyr::distinct()
## We remove some characters that CPLEX cannot deal with.
CarnivalNetwork$target <- gsub("[/]","_",CarnivalNetwork$target)
CarnivalNetwork$target <- gsub("[space]","_",CarnivalNetwork$target)
CarnivalNetwork$source <- gsub("[-]", "_", CarnivalNetwork$source)
CarnivalNetwork$target <- gsub("[-]", "_", CarnivalNetwork$target)
CarnivalNetwork$source <- gsub(pattern = "/", replacement = "_",
x = CarnivalNetwork$source, fixed = TRUE)
CarnivalNetwork$source <- gsub(pattern = " ", replacement = "_",
x = CarnivalNetwork$source, fixed = TRUE)
CarnivalNetwork$target <- gsub(pattern = "/", replacement = "_",
x = CarnivalNetwork$target, fixed = TRUE)
CarnivalNetwork$target <- gsub(pattern = " ", replacement = "_",
x = CarnivalNetwork$target, fixed = TRUE)
CarnivalNetwork_igraph <-
graph_from_data_frame(CarnivalNetwork[,c(1,3)], directed = TRUE) %>%
getgcc() %>%
igraph::as_data_frame()
CarnivalNetwork_gcc <- dplyr::semi_join(CarnivalNetwork,CarnivalNetwork_igraph,
by = c("source" = "from", "target" = "to"))
ResultsLinearModel <- read_tsv("Data/limma_model_results_20190301.tsv")
LinearModelData_df <- ResultsLinearModel %>%
dplyr::filter(!is.na(residues_str)) %>%
dplyr::mutate(residues_str = strsplit(residues_str, "_")) %>%
tidyr::unnest(residues_str) %>%
dplyr::mutate(GeneSymbol_Residue = paste(GeneSymbol, residues_str, sep="_"))
LinearModelData_LNCaP_noInhib_t1_EGF <- LinearModelData_df %>%
dplyr::filter(term == "LNCaP_noInhib_t1_EGF") %>%
dplyr::filter(p.value < 0.05)  %>%
dplyr::select(GeneSymbol_Residue, statistic, p.value)  %>%
dplyr::group_by(GeneSymbol_Residue) %>%
dplyr::filter(p.value == min(p.value))  %>%
dplyr::ungroup() %>%
dplyr::select(-p.value)  %>%
dplyr::filter(GeneSymbol_Residue %in% CarnivalNetwork_gcc$target) %>%
tibble::column_to_rownames(var = "GeneSymbol_Residue") %>%
as.data.frame()
LinearModelData_LNCaP_noInhib_t1_EGF <- LinearModelData_df %>%
dplyr::filter(term == "LNCaP_noInhib_t1_EGF") %>%
dplyr::filter(p.value < 0.05)  %>%
dplyr::select(GeneSymbol_Residue, statistic, p.value)  %>%
dplyr::group_by(GeneSymbol_Residue) %>%
dplyr::filter(p.value == min(p.value))  %>%
dplyr::ungroup() %>%
dplyr::distinct() %>%
dplyr::select(-p.value)  %>%
dplyr::filter(GeneSymbol_Residue %in% CarnivalNetwork_gcc$target) %>%
tibble::column_to_rownames(var = "GeneSymbol_Residue") %>%
as.data.frame()
dim(LinearModelData_LNCaP_noInhib_t1_EGF)
Kin_activity_PDTs <- as.data.frame(readRDS("Results/Kin_activity_PDTs.rds"))
Kin_activity_LNCaP_noInhib_t1_EGF <- Kin_activity_PDTs  %>%
dplyr::select(LNCaP_noInhib_t1_EGF)
## We have to scale the NES between 1 and 0.
Kin_activity_LNCaP_noInhib_t1_EGF$LNCaP_noInhib_t1_EGF <-
as.data.frame(range(Kin_activity_LNCaP_noInhib_t1_EGF$LNCaP_noInhib_t1_EGF))
length(Kin_activity_LNCaP_noInhib_t1_EGF)
dim(Kin_activity_LNCaP_noInhib_t1_EGF)
Kin_activity_LNCaP_noInhib_t1_EGF
CarnivalResults <-runCARNIVAL(
solverPath="/opt/ibm/ILOG/CPLEX_Studio129/cplex/bin/x86-64_linux/cplex",
netObj=CarnivalNetwork_gcc,
measObj=as.data.frame(t(LinearModelData_LNCaP_noInhib_t1_EGF)),
inputObj = inputObj,
DOTfig=TRUE,
dir_name="Results",
weightObj=as.data.frame(t(Kin_activity_LNCaP_noInhib_t1_EGF)),
# nodeID = 'gene',
timelimit = 14400,
solver = "cplex")
knitr::opts_chunk$set(echo = TRUE)
library(CARNIVAL)
library(OmnipathR)
library(dplyr)
library(readr)
library(bc3net)
range <- function(x){ (x - min(x))/(max(x)-min(x)) * (1 - (-1)) + -1 }
OmnipathInteractions <- import_Omnipath_Interactions() %>%
dplyr::filter(consensus_stimulation != 0 | consensus_inhibition != 0)  %>%
dplyr::mutate(sign = if_else(consensus_stimulation==1,1,-1)) %>%
dplyr::select(source_genesymbol, sign,  target_genesymbol) %>%
dplyr::rename(source ="source_genesymbol", target ="target_genesymbol")
PDTs_df <-
read_tsv("Data/41587_2019_391_MOESM5_ESM.csv",col_names = FALSE,  skip = 1) %>%
dplyr::rename(kinases = "X1", substrates = "X2", kinaseFamily = "X3", sign = "X4") %>%
dplyr::mutate(substrates = gsub("\\(", "_", substrates)) %>%
dplyr::mutate(substrates = gsub("\\)", "",substrates)) %>%
dplyr::select(-kinaseFamily) %>%
dplyr::distinct()
KSN_PDTs <- as.data.frame(PDTs_df) %>%
dplyr::rename(source="kinases", target="substrates") %>%
dplyr::select(source, sign, target)
CarnivalNetwork <- dplyr::bind_rows(OmnipathInteractions, KSN_PDTs) %>%
dplyr::distinct()
## We remove some characters that CPLEX cannot deal with.
CarnivalNetwork$target <- gsub("[/]","_",CarnivalNetwork$target)
CarnivalNetwork$target <- gsub("[space]","_",CarnivalNetwork$target)
CarnivalNetwork$source <- gsub("[-]", "_", CarnivalNetwork$source)
CarnivalNetwork$target <- gsub("[-]", "_", CarnivalNetwork$target)
CarnivalNetwork$source <- gsub(pattern = "/", replacement = "_",
x = CarnivalNetwork$source, fixed = TRUE)
CarnivalNetwork$source <- gsub(pattern = " ", replacement = "_",
x = CarnivalNetwork$source, fixed = TRUE)
CarnivalNetwork$target <- gsub(pattern = "/", replacement = "_",
x = CarnivalNetwork$target, fixed = TRUE)
CarnivalNetwork$target <- gsub(pattern = " ", replacement = "_",
x = CarnivalNetwork$target, fixed = TRUE)
CarnivalNetwork_igraph <-
graph_from_data_frame(CarnivalNetwork[,c(1,3)], directed = TRUE) %>%
getgcc() %>%
igraph::as_data_frame()
CarnivalNetwork_gcc <- dplyr::semi_join(CarnivalNetwork,CarnivalNetwork_igraph,
by = c("source" = "from", "target" = "to"))
ResultsLinearModel <- read_tsv("Data/limma_model_results_20190301.tsv")
LinearModelData_df <- ResultsLinearModel %>%
dplyr::filter(!is.na(residues_str)) %>%
dplyr::mutate(residues_str = strsplit(residues_str, "_")) %>%
tidyr::unnest(residues_str) %>%
dplyr::mutate(GeneSymbol_Residue = paste(GeneSymbol, residues_str, sep="_"))
LinearModelData_LNCaP_noInhib_t1_EGF <- LinearModelData_df %>%
dplyr::filter(term == "LNCaP_noInhib_t1_EGF") %>%
dplyr::filter(p.value < 0.05)  %>%
dplyr::select(GeneSymbol_Residue, statistic, p.value)  %>%
dplyr::group_by(GeneSymbol_Residue) %>%
dplyr::filter(p.value == min(p.value))  %>%
dplyr::ungroup() %>%
dplyr::distinct() %>%
dplyr::select(-p.value)  %>%
dplyr::filter(GeneSymbol_Residue %in% CarnivalNetwork_gcc$target) %>%
tibble::column_to_rownames(var = "GeneSymbol_Residue") %>%
as.data.frame()
Kin_activity_PDTs <- as.data.frame(readRDS("Results/Kin_activity_PDTs.rds"))
Kin_activity_LNCaP_noInhib_t1_EGF <- Kin_activity_PDTs  %>%
dplyr::select(LNCaP_noInhib_t1_EGF)
## We have to scale the NES between 1 and 0.
Kin_activity_LNCaP_noInhib_t1_EGF$LNCaP_noInhib_t1_EGF <-
as.data.frame(range(Kin_activity_LNCaP_noInhib_t1_EGF$LNCaP_noInhib_t1_EGF))
inputObj <- data.frame(EGF = 1)
CarnivalResults <-runCARNIVAL(
solverPath="/opt/ibm/ILOG/CPLEX_Studio129/cplex/bin/x86-64_linux/cplex",
netObj=CarnivalNetwork_gcc,
measObj=as.data.frame(t(LinearModelData_LNCaP_noInhib_t1_EGF)),
inputObj = inputObj,
DOTfig=TRUE,
dir_name="Results",
weightObj=as.data.frame(t(Kin_activity_LNCaP_noInhib_t1_EGF)),
# nodeID = 'gene',
timelimit = 14400,
solver = "cplex")
rm(list=ls());cat('\014');if(length(dev.list()>0)){dev.off()}
library(CARNIVAL)
library(OmnipathR)
library(dplyr)
library(readr)
library(bc3net)
range <- function(x){ (x - min(x))/(max(x)-min(x)) * (1 - (-1)) + -1 }
setwd("/home/alvaldeolivas/Documents/GitHub/Saezlab/prostate-phosphoSWATH_V2/")
#### Generate the Network
OmnipathInteractions <- import_Omnipath_Interactions() %>%
dplyr::filter(consensus_stimulation != 0 | consensus_inhibition != 0)  %>%
dplyr::mutate(sign = if_else(consensus_stimulation==1,1,-1)) %>%
dplyr::select(source_genesymbol, sign,  target_genesymbol) %>%
dplyr::rename(source ="source_genesymbol", target ="target_genesymbol")
PDTs_df <-
read_tsv("Data/41587_2019_391_MOESM5_ESM.csv",col_names = FALSE,  skip = 1) %>%
dplyr::rename(kinases = "X1", substrates = "X2", kinaseFamily = "X3", sign = "X4") %>%
dplyr::mutate(substrates = gsub("\\(", "_", substrates)) %>%
dplyr::mutate(substrates = gsub("\\)", "",substrates)) %>%
dplyr::select(-kinaseFamily) %>%
dplyr::distinct()
KSN_PDTs <- as.data.frame(PDTs_df) %>%
dplyr::rename(source="kinases", target="substrates") %>%
dplyr::select(source, sign, target)
CarnivalNetwork <- dplyr::bind_rows(OmnipathInteractions, KSN_PDTs) %>%
dplyr::distinct()
CarnivalNetwork$target <- gsub("[/]","_",CarnivalNetwork$target)
CarnivalNetwork$target <- gsub("[space]","_",CarnivalNetwork$target)
CarnivalNetwork$source <- gsub("[-]", "_", CarnivalNetwork$source)
CarnivalNetwork$target <- gsub("[-]", "_", CarnivalNetwork$target)
CarnivalNetwork$source <- gsub(pattern = "/", replacement = "_", x = CarnivalNetwork$source, fixed = TRUE)
CarnivalNetwork$source <- gsub(pattern = " ", replacement = "_", x = CarnivalNetwork$source, fixed = TRUE)
CarnivalNetwork$target <- gsub(pattern = "/", replacement = "_", x = CarnivalNetwork$target, fixed = TRUE)
CarnivalNetwork$target <- gsub(pattern = " ", replacement = "_", x = CarnivalNetwork$target, fixed = TRUE)
### We are going to keep only the largest connected component of our network
CarnivalNetwork_igraph <-
graph_from_data_frame(CarnivalNetwork[,c(1,3)], directed = TRUE) %>%
getgcc() %>%
igraph::as_data_frame()
CarnivalNetwork_gcc <- dplyr::semi_join(CarnivalNetwork,CarnivalNetwork_igraph,
by = c("source" = "from", "target" = "to"))
# CarnivalNetwork$source <- gsub("[-+{},;() ]","___",CarnivalNetwork$source)
# CarnivalNetwork$target <- gsub("[-+{},;() ]","___",CarnivalNetwork$target)
###### Linear model to take the t-values and use them as the dowstream targets
## for CARNIVAL, the measurements objects
ResultsLinearModel <- read_tsv("Data/limma_model_results_20190301.tsv")
LinearModelData_df <- ResultsLinearModel %>%
dplyr::filter(!is.na(residues_str)) %>%
dplyr::mutate(residues_str = strsplit(residues_str, "_")) %>%
tidyr::unnest(residues_str) %>%
dplyr::mutate(GeneSymbol_Residue = paste(GeneSymbol, residues_str, sep="_"))
LinearModelData_LNCaP_noInhib_t2_EGF <- LinearModelData_df %>%
dplyr::filter(term == "LNCaP_noInhib_t2_EGF") %>%
dplyr::filter(p.value < 0.05)  %>%
dplyr::select(GeneSymbol_Residue, statistic, p.value)  %>%
dplyr::group_by(GeneSymbol_Residue) %>%
dplyr::filter(p.value == min(p.value))  %>%
dplyr::ungroup() %>%
dplyr::select(-p.value)  %>%
dplyr::filter(GeneSymbol_Residue %in% CarnivalNetwork_gcc$target) %>%
tibble::column_to_rownames(var = "GeneSymbol_Residue") %>%
as.data.frame()
# rownames(LinearModelData_LNCaP_noInhib_t2_EGF) <-
#    gsub("[-+{},;() ]","___",rownames(LinearModelData_LNCaP_noInhib_t2_EGF))
###### NES Scores. I am going to use these scores as Progeny scores to drive the network
Kin_activity_PDTs <- as.data.frame(readRDS("Results/Kin_activity_PDTs.rds"))
Kin_activity_LNCaP_noInhib_t2_EGF <- Kin_activity_PDTs  %>%
dplyr::select(LNCaP_noInhib_t2_EGF)
## We have to scale the NES between 1 and 0.
Kin_activity_LNCaP_noInhib_t2_EGF$LNCaP_noInhib_t2_EGF <-
as.data.frame(range(Kin_activity_LNCaP_noInhib_t2_EGF$LNCaP_noInhib_t2_EGF))
# rownames(Kin_activity_LNCaP_noInhib_t2_EGF) <-
#     gsub("[-+{},;() ]","___",rownames(Kin_activity_LNCaP_noInhib_t2_EGF))
##### And I have a perturbation EGF
inputObj <- data.frame(EGF = 1)
##  We run CARNIVAL for our particular condition
# counter_CL <- detectCores() - 2
CarnivalResults <-runCARNIVAL(
solverPath="/opt/ibm/ILOG/CPLEX_Studio129/cplex/bin/x86-64_linux/cplex",
netObj=CarnivalNetwork_gcc,
measObj=as.data.frame(t(LinearModelData_LNCaP_noInhib_t2_EGF)),
inputObj = inputObj,
DOTfig=TRUE,
dir_name="Results",
weightObj=as.data.frame(t(Kin_activity_LNCaP_noInhib_t2_EGF)),
# nodeID = 'gene',
timelimit = 7200,
solver = "cplex")
Kin_activity_LNCaP_noInhib_t1_EGF
rm(list=ls());cat('\014');if(length(dev.list()>0)){dev.off()}
knitr::opts_chunk$set(echo = TRUE)
library(CARNIVAL)
library(OmnipathR)
library(dplyr)
library(readr)
library(bc3net)
range <- function(x){ (x - min(x))/(max(x)-min(x)) * (1 - (-1)) + -1 }
OmnipathInteractions <- import_Omnipath_Interactions() %>%
dplyr::filter(consensus_stimulation != 0 | consensus_inhibition != 0)  %>%
dplyr::mutate(sign = if_else(consensus_stimulation==1,1,-1)) %>%
dplyr::select(source_genesymbol, sign,  target_genesymbol) %>%
dplyr::rename(source ="source_genesymbol", target ="target_genesymbol")
PDTs_df <-
read_tsv("Data/41587_2019_391_MOESM5_ESM.csv",col_names = FALSE,  skip = 1) %>%
dplyr::rename(kinases = "X1", substrates = "X2", kinaseFamily = "X3", sign = "X4") %>%
dplyr::mutate(substrates = gsub("\\(", "_", substrates)) %>%
dplyr::mutate(substrates = gsub("\\)", "",substrates)) %>%
dplyr::select(-kinaseFamily) %>%
dplyr::distinct()
KSN_PDTs <- as.data.frame(PDTs_df) %>%
dplyr::rename(source="kinases", target="substrates") %>%
dplyr::select(source, sign, target)
CarnivalNetwork <- dplyr::bind_rows(OmnipathInteractions, KSN_PDTs) %>%
dplyr::distinct()
## We remove some characters that CPLEX cannot deal with.
CarnivalNetwork$target <- gsub("[/]","_",CarnivalNetwork$target)
CarnivalNetwork$target <- gsub("[space]","_",CarnivalNetwork$target)
CarnivalNetwork$source <- gsub("[-]", "_", CarnivalNetwork$source)
CarnivalNetwork$target <- gsub("[-]", "_", CarnivalNetwork$target)
CarnivalNetwork$source <- gsub(pattern = "/", replacement = "_",
x = CarnivalNetwork$source, fixed = TRUE)
CarnivalNetwork$source <- gsub(pattern = " ", replacement = "_",
x = CarnivalNetwork$source, fixed = TRUE)
CarnivalNetwork$target <- gsub(pattern = "/", replacement = "_",
x = CarnivalNetwork$target, fixed = TRUE)
CarnivalNetwork$target <- gsub(pattern = " ", replacement = "_",
x = CarnivalNetwork$target, fixed = TRUE)
CarnivalNetwork_igraph <-
graph_from_data_frame(CarnivalNetwork[,c(1,3)], directed = TRUE) %>%
getgcc() %>%
igraph::as_data_frame()
CarnivalNetwork_gcc <- dplyr::semi_join(CarnivalNetwork,CarnivalNetwork_igraph,
by = c("source" = "from", "target" = "to")) %>%
dplyr::distinct()
ResultsLinearModel <- read_tsv("Data/limma_model_results_20190301.tsv")
LinearModelData_df <- ResultsLinearModel %>%
dplyr::filter(!is.na(residues_str)) %>%
dplyr::mutate(residues_str = strsplit(residues_str, "_")) %>%
tidyr::unnest(residues_str) %>%
dplyr::mutate(GeneSymbol_Residue = paste(GeneSymbol, residues_str, sep="_"))
LinearModelData_LNCaP_noInhib_t1_EGF <- LinearModelData_df %>%
dplyr::filter(term == "LNCaP_noInhib_t1_EGF") %>%
dplyr::filter(p.value < 0.05)  %>%
dplyr::select(GeneSymbol_Residue, statistic, p.value)  %>%
dplyr::group_by(GeneSymbol_Residue) %>%
dplyr::filter(p.value == min(p.value))  %>%
dplyr::ungroup() %>%
dplyr::distinct() %>%
dplyr::select(-p.value)  %>%
dplyr::filter(GeneSymbol_Residue %in% CarnivalNetwork_gcc$target) %>%
tibble::column_to_rownames(var = "GeneSymbol_Residue") %>%
as.data.frame()
Kin_activity_PDTs <- as.data.frame(readRDS("Results/Kin_activity_PDTs.rds"))
Kin_activity_LNCaP_noInhib_t1_EGF <- Kin_activity_PDTs  %>%
dplyr::select(LNCaP_noInhib_t1_EGF)
## We have to scale the NES between 1 and 0.
Kin_activity_LNCaP_noInhib_t1_EGF$LNCaP_noInhib_t1_EGF <-
as.data.frame(range(Kin_activity_LNCaP_noInhib_t1_EGF$LNCaP_noInhib_t1_EGF))
inputObj <- data.frame(EGF = 1)
inputObj
as.data.frame(t(LinearModelData_LNCaP_noInhib_t1_EGF))
rownames(as.data.frame(t(LinearModelData_LNCaP_noInhib_t1_EGF)))
colnames(as.data.frame(t(LinearModelData_LNCaP_noInhib_t1_EGF)))
duplicated(colnames(as.data.frame(t(LinearModelData_LNCaP_noInhib_t1_EGF))))
as.data.frame(t(Kin_activity_LNCaP_noInhib_t1_EGF))
colnames(as.data.frame(t(Kin_activity_LNCaP_noInhib_t1_EGF)))
duplicated(colnames(as.data.frame(t(Kin_activity_LNCaP_noInhib_t1_EGF))))
CarnivalResults <-runCARNIVAL(
solverPath="/opt/ibm/ILOG/CPLEX_Studio129/cplex/bin/x86-64_linux/cplex",
netObj=CarnivalNetwork_gcc,
measObj=as.data.frame(t(LinearModelData_LNCaP_noInhib_t1_EGF)),
inputObj = inputObj,
DOTfig=TRUE,
dir_name="Results",
weightObj=as.data.frame(t(Kin_activity_LNCaP_noInhib_t1_EGF)),
# nodeID = 'gene',
timelimit = 14400,
solver = "cplex")
head(CarnivalNetwork_gcc)
