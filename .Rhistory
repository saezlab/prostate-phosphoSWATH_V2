Kin_activity <- t(viper(MatrixStatistic, regulon = KSN_Omnipath_regulon,
minsize = 5, adaptive.size = TRUE, eset.filter = TRUE))
Kin_activity
sample_annotation
ann_colors
pheatmap(Kin_activity, cluster_rows=TRUE, cluster_cols=TRUE,
annotation_col=sample_annotation, annotation_colors = ann_colors)
ann_colors
pheatmap(t(Kin_activity), cluster_rows=TRUE, cluster_cols=TRUE,
annotation_col=sample_annotation, annotation_colors = ann_colors)
pheatmap(t(Kin_activity), cluster_rows=TRUE, cluster_cols=TRUE,
annotation_col=sample_annotation, annotation_colors = ann_colors,
fontsize=14,  fontsize_row = 10,  treeheight_col = 0,  border_color = NA)
paletteLength = 100
pheatmap(t(Kin_activity), cluster_rows=TRUE, cluster_cols=TRUE,
annotation_col=sample_annotation, annotation_colors = ann_colors,
fontsize=14,  fontsize_row = 10,  treeheight_col = 1,  border_color = NA)
?pheatmap
pheatmap(t(Kin_activity), cluster_rows=TRUE, cluster_cols=TRUE,
annotation_col=sample_annotation, annotation_colors = ann_colors,
fontsize=14,  fontsize_row = 10,  treeheight_col = 1.5,  border_color = NA,
treeheight_row = 1.5)
pheatmap(t(Kin_activity), cluster_rows=TRUE, cluster_cols=TRUE,
annotation_col=sample_annotation, annotation_colors = ann_colors,
fontsize=8,  fontsize_row = 8,  treeheight_col = 1.5,  border_color = NA,
treeheight_row = 1.5)
covariate_vars <- c("Intercept","ms_day180409", "ms_day180410", "ms_day180412",
"ms_day180414", "Culture_batch", "fraction_missing")
LinearModelData_df <- ResultsLinearModel %>%
dplyr::filter(!is.na(residues_str)) %>%
dplyr::mutate(residues_str = strsplit(residues_str, "_")) %>%
tidyr::unnest(residues_str) %>%
dplyr::mutate(GeneSymbol_Residue = paste(GeneSymbol, residues_str, sep="_"))
LinearModelData_df <- ResultsLinearModel %>%
dplyr::filter(!is.na(residues_str)) %>%
dplyr::mutate(residues_str = strsplit(residues_str, "_")) %>%
tidyr::unnest(residues_str) %>%
dplyr::mutate(GeneSymbol_Residue = paste(GeneSymbol, residues_str, sep="_"))
## From linear model to Matrix suitable to run Viper.
MatrixStatistic <-
LinearModelData_df %>%
dplyr::select(statistic,GeneSymbol_Residue, term) %>%
dplyr::group_by(GeneSymbol_Residue, term) %>%
dplyr::filter(statistic == max(abs(statistic))) %>%
dplyr::ungroup() %>%
dplyr::distinct()  %>%
tidyr::pivot_wider(names_from = term, values_from = statistic)  %>%
tibble::column_to_rownames(var = "GeneSymbol_Residue") %>%
dplyr::filter(!(term %in% covariate_vars))
## From linear model to Matrix suitable to run Viper.
MatrixStatistic <-
LinearModelData_df %>%
dplyr::select(statistic,GeneSymbol_Residue, term) %>%
dplyr::filter(!(term %in% covariate_vars)) %>%
dplyr::group_by(GeneSymbol_Residue, term) %>%
dplyr::filter(statistic == max(abs(statistic))) %>%
dplyr::ungroup() %>%
dplyr::distinct()  %>%
tidyr::pivot_wider(names_from = term, values_from = statistic)  %>%
tibble::column_to_rownames(var = "GeneSymbol_Residue") %>%
as.matrix()
dim(MatrixStatistic)
Omnipath_df_reduced <- Omnipath_df %>%
dplyr::select(enzyme_genesymbol,GeneResidue) %>%
dplyr::rename(kinases = "enzyme_genesymbol", substrates = "GeneResidue")
KSN_Omnipath <- Omnipath_df_reduced %>%
dplyr::distinct() %>%
dplyr::mutate(sign = 1)
nrow(KSN_Omnipath)
KSN_Omnipath_regulon <- df_to_viper_regulon(KSN_Omnipath[,c(2,1,3)])
Kin_activity_Omnipath <- viper(MatrixStatistic, regulon = KSN_Omnipath_regulon,
minsize = 5, adaptive.size = TRUE, eset.filter = TRUE)
pheatmap(Kin_activity_Omnipath, cluster_rows=TRUE, cluster_cols=TRUE,
annotation_col=sample_annotation, annotation_colors = ann_colors,
fontsize=8,  fontsize_row = 8,  treeheight_col = 1.5,  border_color = NA,
treeheight_row = 1.5)
?viper
KEA2_df
head(KEA2_df)
KEA2_df
dim(KEA2_df)
grid.draw(Venn_plot)
KSN_KEA2 <- KEA2_df %>%
dplyr::distinct() %>%
dplyr::mutate(sign = 1)
nrow(KSN_KEA2)
KSN_KEA2
KSN_KEA2_regulon <- df_to_viper_regulon(KSN_KEA2[,c(2,1,3)])
Kin_activity_Omnipath <- viper(MatrixStatistic, regulon = KSN_KEA2_regulon,
minsize = 5, adaptive.size = TRUE, eset.filter = TRUE)
Kin_activity_KEA2 <- viper(MatrixStatistic, regulon = KSN_KEA2_regulon,
minsize = 5, adaptive.size = TRUE, eset.filter = TRUE)
pheatmap(Kin_activity_KEA2, cluster_rows=TRUE, cluster_cols=TRUE,
annotation_col=sample_annotation, annotation_colors = ann_colors,
fontsize=8,  fontsize_row = 8,  treeheight_col = 1.5,  border_color = NA,
treeheight_row = 1.5)
PDTs_df
KSN_PDTs <- PDTs_df
nrow(KSN_PDTs)
KSN_PDTs_regulon <- df_to_viper_regulon(KSN_PDTs[,c(2,1,3)])
Kin_activity_PDTs <- viper(MatrixStatistic, regulon = KSN_PDTs_regulon,
minsize = 5, adaptive.size = TRUE, eset.filter = TRUE)
KSN_PDTs_regulon
KSN_PDTs
KSN_PDTs
KSN_PDTs <- as.data.frame(PDTs_df)
nrow(KSN_PDTs)
KSN_PDTs
KSN_PDTs_regulon <- df_to_viper_regulon(KSN_PDTs[,c(2,1,3)])
Kin_activity_PDTs <- viper(MatrixStatistic, regulon = KSN_PDTs_regulon,
minsize = 5, adaptive.size = TRUE, eset.filter = TRUE)
Kin_activity_PDTs
pheatmap(Kin_activity_PDTs, cluster_rows=TRUE, cluster_cols=TRUE,
annotation_col=sample_annotation, annotation_colors = ann_colors,
fontsize=8,  fontsize_row = 8,  treeheight_col = 1.5,  border_color = NA,
treeheight_row = 1.5)
KSN_merged_Allsources <- dplyr::bind_rows(KSN_Omnipath, KSN_KEA2, KSN_PDTs) %>%
dplyr::distinct() %>%
dplyr::mutate(sign = 1)
nrow(KSN_merged_Allsources)
KSN_merged_Allsources <- dplyr::bind_rows(KSN_Omnipath, KSN_KEA2, KSN_PDTs) %>%
dplyr::distinct() %>%
dplyr::mutate(sign = 1)
nrow(KSN_merged_Allsources)
KSN_Allsources_regulon <- df_to_viper_regulon(KSN_merged_Allsources[,c(2,1,3)])
Kin_activity_Allsources <- (viper(MatrixStatistic, regulon = KSN_Allsources_regulon,
minsize = 5, adaptive.size = TRUE, eset.filter = TRUE))
pheatmap(Kin_activity_Allsources, cluster_rows=TRUE, cluster_cols=TRUE,
annotation_col=sample_annotation, annotation_colors = ann_colors,
fontsize=8,  fontsize_row = 8,  treeheight_col = 1.5,  border_color = NA,
treeheight_row = 1.5)
?pheatmap
pheatmap(Kin_activity_Omnipath, cluster_rows=TRUE, cluster_cols=TRUE,
annotation_col=sample_annotation, annotation_colors = ann_colors,
fontsize=8,  fontsize_row = 8,  treeheight_col = 1.5,  border_color = NA,
treeheight_row = 1.5, filename="FiguresKAE/Kin_activity_Omnipath.pdf")
pheatmap(Kin_activity_Omnipath, cluster_rows=TRUE, cluster_cols=TRUE,
annotation_col=sample_annotation, annotation_colors = ann_colors,
fontsize=8,  fontsize_row = 8,  treeheight_col = 1.5,  border_color = NA,
treeheight_row = 1.5, filename="FiguresKAE/Kin_activity_Omnipath.pdf",
silent=FALSE)
pheatmap(Kin_activity_Omnipath, cluster_rows=TRUE, cluster_cols=TRUE,
annotation_col=sample_annotation, annotation_colors = ann_colors,
fontsize=8,  fontsize_row = 8,  treeheight_col = 1.5,  border_color = NA,
treeheight_row = 1.5, filename="FiguresKAE/Kin_activity_Omnipath.pdf",
silent=FALSE)
pheatmap(Kin_activity_Omnipath, cluster_rows=TRUE, cluster_cols=TRUE,
annotation_col=sample_annotation, annotation_colors = ann_colors,
fontsize=8,  fontsize_row = 8,  treeheight_col = 1.5,  border_color = NA,
treeheight_row = 1.5, filename="FiguresKAE/Kin_activity_Omnipath.pdf",
width = 8.3, height = 11.7, silent=FALSE)
pheatmap(Kin_activity_Omnipath, cluster_rows=TRUE, cluster_cols=TRUE,
annotation_col=sample_annotation, annotation_colors = ann_colors,
fontsize=8,  fontsize_row = 8,  treeheight_col = 1.5,  border_color = NA,
treeheight_row = 1.5, filename="FiguresKAE/Kin_activity_Omnipath.pdf",
width = 8.3, height = 11.7, silent=FALSE)
pheatmap(Kin_activity_Omnipath, cluster_rows=TRUE, cluster_cols=TRUE,
annotation_col=sample_annotation, annotation_colors = ann_colors,
fontsize=8,  fontsize_row = 8,  treeheight_col = 1.5,  border_color = NA,
treeheight_row = 1.5, filename="FiguresKAE/Kin_activity_Omnipath.pdf",
width = 11.7, height = 8.3, silent=FALSE)
pheatmap(Kin_activity_Omnipath, cluster_rows=TRUE, cluster_cols=TRUE,
annotation_col=sample_annotation, annotation_colors = ann_colors,
fontsize=8,  fontsize_row = 8,  treeheight_col = 1.5,  border_color = NA,
treeheight_row = 1.5)
pheatmap(Kin_activity_Omnipath, cluster_rows=TRUE, cluster_cols=TRUE,
annotation_col=sample_annotation, annotation_colors = ann_colors,
fontsize=8,  fontsize_row = 8,  treeheight_col = 1.5,  border_color = NA,
treeheight_row = 1.5, width = 11.7, height = 8.3)
? viper
alberto <- import_Omnipath_complexes()
?import_Omnipath_complexes
alberto
query_genes <- c("ABL1","ABL2","LIMK1", "LIMK2", "MINK1")
complexes <- import_Omnipath_complexes()
complexes_query_genes_any <- get_complex_genes(complexes,query_genes, total_match=FALSE)
complexes_query_genes_any
library(progeny)
full_model <- getFullModel(organism=organism)
full_model <- getFullModel()
?getFullModel
full_model <- getFullModel("Human")
head(full_model)
full_model <- getFullModel("Human") %>%
dplyr::filter(pathway == "EGFR")
head(full_model)
dim(full_model)
?arrange
full_model <- getFullModel("Human") %>%
dplyr::filter(pathway == "EGFR") %>%
dplyr::arrange(desc(-p.value))
head(full_model)
c("MINK1","ABL1","ABL2","LIMK1","LIMK2")
ourgenes <- c("MINK1","ABL1","ABL2","LIMK1","LIMK2")
library(progeny)
full_model <- getFullModel("Human") %>%
dplyr::filter(pathway == "EGFR") %>%
dplyr::arrange(desc(-p.value)) %>%
dplyr::filter(gene %in% ourgenes)
full_model
full_model <- getFullModel("Human") %>%
dplyr::filter(pathway == "EGFR") %>%
dplyr::top_n(100, wt = -p.value) %>%
dplyr::filter(gene %in% ourgenes)
full_model
library(progeny)
full_model <- getFullModel("Human") %>%
dplyr::filter(pathway == "EGFR") %>%
dplyr::top_n(200, wt = -p.value) %>%
dplyr::filter(gene %in% ourgenes)
full_model
full_model <- getFullModel("Human") %>%
dplyr::filter(pathway == "EGFR") %>%
dplyr::top_n(500, wt = -p.value) %>%
dplyr::filter(gene %in% ourgenes)
full_model
full_model <- getFullModel("Human") %>%
dplyr::filter(pathway == "EGFR") %>%
dplyr::top_n(1000, wt = -p.value) %>%
dplyr::filter(gene %in% ourgenes)
full_model
full_model <- getFullModel("Human") %>%
dplyr::filter(pathway == "EGFR") %>%
dplyr::top_n(10000, wt = -p.value) %>%
dplyr::filter(gene %in% ourgenes)
full_model
full_model <- getFullModel("Human") %>%
dplyr::filter(pathway == "EGFR") %>%
dplyr::top_n(5000, wt = -p.value) %>%
dplyr::filter(gene %in% ourgenes)
full_model
library(gprofiler2)
EnrichmentResults <- gost(ourgenes, significant = TRUE,
user_threshold = 0.001, correction_method = c("fdr"))
EnrichmentResults
?gost
colnames(EnrichmentResults)
EnrichmentResults
EnrichmentResults$result
colnames(EnrichmentResults$result)
EnrichmentResults <- gost(ourgenes, significant = TRUE,
user_threshold = 0.001, correction_method = c("fdr")) %>%
dplyr::filter(intersection_size >= 4)
class(intersection_size)
class(EnrichmentResults)
EnrichmentResults <- unlist(gost(ourgenes, significant = TRUE,
user_threshold = 0.001, correction_method = c("fdr")))[1] %>%
dplyr::filter(intersection_size >= 4)
unlist(gost(ourgenes, significant = TRUE,
user_threshold = 0.001, correction_method = c("fdr")))[1]
EnrichmentResults <- gost(ourgenes, significant = TRUE,
user_threshold = 0.001, correction_method = c("fdr"))[[1]] %>%
dplyr::filter(intersection_size >= 4)
EnrichmentResults
EnrichmentResults <- gost(ourgenes, significant = TRUE,
user_threshold = 0.001, correction_method = c("fdr"))[[1]] %>%
dplyr::filter(intersection_size >= 4) %>%
dplyr::arrange(desc(p_value))%>%
dplyr::select(term_id, source, term_name, p_value)
EnrichmentResults
CarnivalResults <-
readRDS("/home/alvaldeolivas/Documents/GitHub/Saezlab/prostate-phosphoSWATH_V2/Results/CarnivalResults.rds")
CarnivalResults
class(CarnivalResults)
length(CarnivalResults)
CarnivalResults$weightedSIF
View(CarnivalResults$weightedSIF)
View(CarnivalResults$nodesAttributes)
CarnivalResults$weightedSIF
sif_carni <- CarnivalResults$weightedSIF
bg <- unique(c(gsub("_.*","",sif_carni$source),gsub("_.*","",sif_carni$target)))
head(CarnivalResults$weightedSIF)
class(CarnivalResults$weightedSIF)
sif_carni <- as.data.frame(CarnivalResults$weightedSIF, stringsAsFactors = FALSE)
head(sif_carni)
?runGSAhyper
library(readr)
library(piano)
library(omicToolsTest)
CarnivalResults <-
readRDS("/home/alvaldeolivas/Documents/GitHub/Saezlab/prostate-phosphoSWATH_V2/Results/CarnivalResults.rds")
sif_carni <- as.data.frame(CarnivalResults$weightedSIF, stringsAsFactors = FALSE)
bg <- unique(c(gsub("_.*","",sif_carni$source),gsub("_.*","",sif_carni$target)))
head(sif_carni)
bg <- unique(c(sif_carni$source,sif_carni$target))
bg
bg <- unique(c(sif_carni$source,sif_carni$target))
bg
sif_carni <- as.data.frame(CarnivalResults$weightedSIF,
stringsAsFactors = FALSE)
colnames(sif_carni) <- c("source", "sign", "target", "Weight")
bg <- unique(c(sif_carni$source,sif_carni$target))
bg
sif_carni[sif_carni$source == "ROCK2",]
bg <- unique(c(gsub("_.*","",sif_carni$source),gsub("_.*","",sif_carni$target)))
bg
CARNI_att_res <- as.data.frame(CarnivalResults$nodesAttributes)
sucesses <- unique(gsub("_.*","",CARNI_att_res$Nodes))
sucesses
CarnivalResults
head(CarnivalResults)
CarnivalResults$nodesAttributes
class(CarnivalResults$nodesAttributes)
head(CARNI_att_res)
sucesses <- unique(gsub("_.*","",CARNI_att_res$Node))
sucesses
?gmt_to_csv
?runGSAhyper
pathways <- gmt_to_csv("/home/alvaldeolivas/Documents/GitHub/Saezlab/prostate-phosphoSWATH_V2/Data/c2.cp.v7.0.symbols.gmt")
sig_pathways <- runGSAhyper(sucesses, universe = bg, gsc = loadGSC(pathways))
sig_pathways_df <- as.data.frame(sig_pathways$resTab)
sig_pathways_df
View(sig_pathways_df)
Kin_activity_PDTs <- as.data.frame(readRDS("Results/Kin_activity_PDTs.rds"))
setwd("/home/alvaldeolivas/Documents/GitHub/Saezlab/prostate-phosphoSWATH_V2/")
Kin_activity_PDTs <- as.data.frame(readRDS("Results/Kin_activity_PDTs.rds"))
Kin_activity_LNCaP_noInhib_t2_EGF <- Kin_activity_PDTs  %>%
dplyr::select(LNCaP_noInhib_t2_EGF)
library(dplyr)
View(Kin_activity_PDTs)
Kin_activity_PDTs <- as.data.frame(readRDS("Results/Kin_activity_PDTs.rds"))
Kin_activity_LNCaP_noInhib_t2_EGF <- Kin_activity_PDTs  %>%
dplyr::select(LNCaP_noInhib_t2_EGF)
kinases <- as.data.frame(t(Kin_activity_LNCaP_noInhib_t2_EGF))
sig_pathways_df$sign <- unlist(lapply(row.names(sig_pathways_df), function(x, kinases, pathways){
return(mean(kinases[row.names(kinases) %in% pathways[pathways$term == x,1],1]))
},kinases = kinases, pathways = pathways))
sig_pathways_df
sig_pathways_df <- sig_pathways_df[!is.nan(sig_pathways_df$sign),]
sig_pathways_df
kinases
row.names(sig_pathways_df)
sig_pathways_df
sig_pathways_df <- as.data.frame(sig_pathways$resTab)
sig_pathways_df
rownames(sig_pathways_df)
head()
head(pathways)
row.names(kinases)
kinases <- as.data.frame(Kin_activity_LNCaP_noInhib_t2_EGF)
sig_pathways_df$sign <- unlist(lapply(row.names(sig_pathways_df), function(x, kinases, pathways){
return(mean(kinases[row.names(kinases) %in% pathways[pathways$term == x,1],1]))
},kinases = kinases, pathways = pathways))
head(sig_pathways_df)
sig_pathways_df <- sig_pathways_df[!is.nan(sig_pathways_df$sign),]
head(sig_pathways_df)
KEGG <- sig_pathways_df[grep("KEGG",row.names(sig_pathways_df)),c(1,2,7)]
KEGG <- KEGG[KEGG$`Adjusted p-value` <= 0.05,]
head(KEGG)
sig_pathways_df
PathwaysSign <- PathwaysSelect[PathwaysSelect$`Adjusted p-value` <= 0.05,]
PathwaysSelect <- sig_pathways_df[,c(1,2,7)]
head9PathwaysSelect
head(PathwaysSelect)
PathwaysSign <- PathwaysSelect[PathwaysSelect$`Adjusted p-value` <= 0.05,]
PathwaysSign
length(PathwaysSelect)
dim(PathwaysSelect)
PathwaysSelect$`p-value`
sucesses
head(sucesses)
head(bg)
pathways
?runGSAhyper
length(sucesses)
sucesses
bg
sucesses <- unique(c(gsub("_.*","",sif_carni$source),gsub("_.*","",sif_carni$target)))
CARNI_att_res <- as.data.frame(CarnivalResults$nodesAttributes,
stringsAsFactors = FALSE)
bg <- unique(gsub("_.*","",CARNI_att_res$Node))
pathways <- gmt_to_csv("/home/alvaldeolivas/Documents/GitHub/Saezlab/prostate-phosphoSWATH_V2/Data/c2.cp.v7.0.symbols.gmt")
sig_pathways <- runGSAhyper(sucesses, universe = bg, gsc = loadGSC(pathways))
sig_pathways_df <- as.data.frame(sig_pathways$resTab)
Kin_activity_PDTs <- as.data.frame(readRDS("Results/Kin_activity_PDTs.rds"))
Kin_activity_LNCaP_noInhib_t2_EGF <- Kin_activity_PDTs  %>%
dplyr::select(LNCaP_noInhib_t2_EGF)
kinases <- as.data.frame(Kin_activity_LNCaP_noInhib_t2_EGF)
sig_pathways_df$sign <- unlist(lapply(row.names(sig_pathways_df), function(x, kinases, pathways){
return(mean(kinases[row.names(kinases) %in% pathways[pathways$term == x,1],1]))
},kinases = kinases, pathways = pathways))
sig_pathways_df <- sig_pathways_df[!is.nan(sig_pathways_df$sign),]
PathwaysSelect <- sig_pathways_df[,c(1,2,7)]
PathwaysSign <- PathwaysSelect[PathwaysSelect$`Adjusted p-value` <= 0.05,]
KEGG$pathway <- row.names(KEGG)
KEGG <- KEGG[,c(4,1,2,3)]
KEGG$pathway <- gsub("KEGG_","",KEGG$pathway)
KEGG
head(KEGG)
head(PathwaysSign)
length(PathwaysSign)
dim(PathwaysSign)
PathwaysSign <- PathwaysSelect[PathwaysSelect$`Adjusted p-value` <= 0.001,]
PathwaysSelect <- sig_pathways_df[,c(1,2,7)]
PathwaysSign <- PathwaysSelect[PathwaysSelect$`Adjusted p-value` <= 0.001,]
PathwaysSign$pathway <- row.names(PathwaysSign)
PathwaysSign <- PathwaysSign[,c(4,1,2,3)]
PathwaysSign$pathway <- gsub("KEGG_","",KEGG$pathway)
PathwaysSign
PathwaysSelect <- sig_pathways_df[,c(1,2,7)]
PathwaysSign <- PathwaysSelect[PathwaysSelect$`Adjusted p-value` <= 0.00001,]
PathwaysSign$pathway <- row.names(PathwaysSign)
PathwaysSign <- PathwaysSign[,c(4,1,2,3)]
head(PathwaysSign)
dim(PathwaysSign)
View(PathwaysSign)
library(ggplot2)
PathwaysSign
log10
?log10
p<-ggplot(data=PathwaysSign, aes(x=pathway, y=-log10(p-value))) +
geom_bar(stat="identity")
p
p<-ggplot(data=PathwaysSign, aes(x=pathway, y=-log10(p-value))) +
geom_bar(stat="identity")
p
head(PathwaysSign)
p<-ggplot(data=PathwaysSign, aes(x=pathway, y=-log10(p-value))) +
geom_bar(stat="identity")
p
p <- ggplot(data=PathwaysSign, aes(x=pathway, y=-log10(p-value))) +
geom_bar(stat="identity")
p
p <- ggplot(data=PathwaysSign, aes(x=pathway, y=p-value)) +
geom_bar(stat="identity")
p
p <- ggplot(data=PathwaysSign, aes(x=pathway, y=p-value)) + geom_bar(stat="identity")
p
head(PathwaysSign)
p <- ggplot(data=PathwaysSign, aes(x=pathway, y=sign)) + geom_bar(stat="identity")
p
p <- ggplot(data=PathwaysSign, aes(x=pathway, y=`p-value`)) + geom_bar(stat="identity")
p
colnames(PathwaysSign) <- c("pathway","pvalue","AdjPvalu","sign")
p <- ggplot(data=PathwaysSign, aes(x=pathway, y=-log10(pvalue))) + geom_bar(stat="identity")
p
colnames(PathwaysSign) <- c("pathway","pvalue","AdjPvalue","sign")
p <- ggplot(PathwaysSign, aes(x = pathway, y = -log10(pvalue))) +
geom_bar(stat = "identity", width = 0.84, fill = sign) + theme_void() +
theme(legend.position = "none",
axis.title.x=element_blank(),
axis.title.y=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
plot.margin = NULL) +
scale_y_continuous(expand = c(0,0))
p
p <- ggplot(PathwaysSign, aes(x = pathway, y = -log10(pvalue))) +
geom_bar(stat = "identity", width = 0.84, fill = sign) + theme_void() +
theme(legend.position = "none",
axis.title.x=element_blank(),
axis.title.y=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
plot.margin = NULL) +
sad
p <- ggplot(PathwaysSign, aes(x = pathway, y = -log10(pvalue))) +
geom_bar(stat = "identity", width = 0.84, fill = sign) + theme_void() +
theme(legend.position = "none",
axis.title.x=element_blank(),
axis.title.y=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
plot.margin = NULL)
p
p <- ggplot(PathwaysSign, aes(x = pathway, y = -log10(pvalue))) +
geom_bar(stat = "identity", width = 0.84, fill = PathwaysSign$sign) + theme_void() +
theme(legend.position = "none",
axis.title.x=element_blank(),
axis.title.y=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
plot.margin = NULL)
p
p <- ggplot(PathwaysSign, aes(x = pathway, y = -log10(pvalue))) +
geom_bar(stat = "identity", fill = PathwaysSign$sign) + theme_void() +
theme(legend.position = "none",
axis.title.x=element_blank(),
axis.title.y=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
plot.margin = NULL)
p
p <- ggplot(PathwaysSign, aes(x = pathway, y = -log10(pvalue))) +
geom_bar(stat = "identity") + theme_void() +
theme(legend.position = "none",
axis.title.x=element_blank(),
axis.title.y=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
plot.margin = NULL)
p
p <- ggplot(PathwaysSign, aes(x = pathway, y = -log10(pvalue))) +
geom_bar(stat = "identity") + theme_void() +
p <- ggplot(PathwaysSign, aes(x = pathway, y = -log10(pvalue))) +
geom_bar(stat = "identity") + theme_void()
p <- ggplot(PathwaysSign, aes(x = pathway, y = -log10(pvalue))) +
geom_bar(stat = "identity") + theme_void()
p
dev.off()
p <- ggplot(PathwaysSign, aes(x = pathway, y = -log10(pvalue))) +
geom_bar(stat = "identity") + theme_void()
p
p <- ggplot(PathwaysSign, aes(x = pathway, y = -log10(pvalue))) +
geom_bar(stat = "identity")
p
p <- ggplot(PathwaysSign, aes(x = pathway, y = -log10(pvalue))) +
geom_bar(stat = "identity", alpha = sign)
p
p <- ggplot(PathwaysSign, aes(x = pathway, y = -log10(pvalue))) +
geom_bar(stat = "identity", alpha = PathwaysSign$sign)
p
